{{ 'list-collections.css' | asset_url | stylesheet_tag }}
{% liquid
	assign section_heading = section.settings.heading
	assign section_description = section.settings.description
	assign columns_desktop = section.settings.columns_desktop
	assign style = section.settings.style
	assign collection_layout = section.settings.layout
	assign content_alignment = section.settings.content_alignment
	assign collection_description = section.settings.collection_description
	assign overlay_opacity = section.settings.overlay_opacity
	assign disable_top_spacing = section.settings.disable_top_spacing
	assign disable_bottom_spacing = section.settings.disable_bottom_spacing

	if collection_layout == 'carousel'
		assign is_carousel = true
		assign carousel_class = 'carousel'
	endif
%}
<div class="list-collections section-spacing{% if disable_top_spacing %} section-spacing--disable-top{% endif %}{% if disable_bottom_spacing %} section-spacing--disable-bottom{% endif %}" style="--overlay-opacity: {{ overlay_opacity | divided_by: 100.0 }}">
	{% render 'section-header', section_heading: section_heading, section_description: section_description %}
	<div class="row {{ content_alignment }}" style="--var-collection-list-columns: {{ columns_desktop }}">
	  <div class="small-12 columns">
			{% if section.blocks.size > 0 %}
				<div class="collection-grid collection-grid__{{ collection_layout }} {{ carousel_class }}">
			    {% for block in section.blocks %}
			      {% render 'collection-card', grid_collection: collections[block.settings.collection], media_aspect_ratio: section.settings.image_ratio, style: style, index: forloop.index, is_carousel: is_carousel, columns_desktop: columns_desktop, collection_description: collection_description %}
			    {% endfor %}
				</div>
			{% else %}
				{%- liquid
					assign collection_list_pagination_num = section.settings.collection_list_pagination_num | plus: 0

			    case section.settings.sort
			      when 'products_high' or 'products_low'
			        assign collections = collections | sort: 'all_products_count'
			      when 'date' or 'date_reversed'
			        assign collections = collections | sort: 'published_at'
			    endcase

			    if section.settings.sort == 'products_high' or section.settings.sort == 'date_reversed' or section.settings.sort == 'alphabetical_reversed'
			      assign collections = collections | reverse
			    endif
			  -%}
				{%- paginate collections by collection_list_pagination_num -%}
					<div class="collection-grid collection-grid__{{ collection_layout }} {{ carousel_class }}">
						{% for collection in collections %}
							{% render 'collection-card', grid_collection: collection, media_aspect_ratio: section.settings.image_ratio, style: style, layout: collection_layout, index: forloop.index, is_carousel: is_carousel, columns_desktop: columns_desktop, collection_description: collection_description %}
						{% endfor %}
					</div>
					{% render 'pagination', pagination: paginate %}
				{%- endpaginate -%}
			{% endif %}
	  </div>
	</div>
</div>
{% schema %}
  {
    "name": "Collection list page",
    "settings": [
			{
				"type": "text",
				"id": "heading",
				"label": "Heading",
				"default": "Shop by Category"
			},
			{
				"type": "richtext",
				"id": "description",
				"label": "Description",
				"default": "<p>Add a short description for your collections</p>"
			},
			{
	      "type": "select",
	      "id": "sort",
	      "options": [
	        {
	          "value": "alphabetical",
	          "label": "Alphabetically, A-Z"
	        },
	        {
	          "value": "alphabetical_reversed",
	          "label": "Alphabetically, Z-A"
	        },
	        {
	          "value": "date_reversed",
	          "label": "Date, new to old"
	        },
	        {
	          "value": "date",
	          "label": "Date, old to new"
	        },
	        {
	          "value": "products_high",
	          "label": "Product count, high to low"
	        },
	        {
	          "value": "products_low",
	          "label": "Product count, low to high"
	        }
	      ],
	      "default": "alphabetical",
	      "label": "Sort collections by:"
	    },
			{
	      "type": "select",
	      "id": "image_ratio",
	      "options": [
	        {
	          "value": "adapt",
	          "label": "Adapt to image"
	        },
	        {
	          "value": "portrait",
	          "label": "Portrait"
	        },
	        {
	          "value": "square",
	          "label": "Square"
	        }
	      ],
	      "default": "portrait",
	      "label": "Image ratio",
	      "info": "Add images by editing your collections. [Learn more](https://help.shopify.com/en/manual/products/collections)"
	    },
			{
				"type": "select",
				"id": "layout",
				"options": [
					{
						"value": "grid",
						"label": "Grid"
					},
					{
						"value": "carousel",
						"label": "Carousel"
					},
					{
						"value": "collage",
						"label": "Collage"
					}
				],
				"default": "grid",
				"label": "Layout"
			},
			{
				"type": "select",
				"id": "style",
				"options": [
					{
						"value": "style1",
						"label": "Underneath image"
					},
					{
						"value": "style2",
						"label": "Over image"
					}
				],
				"default": "style1",
				"label": "Style"
			},
			{
				"type": "select",
				"id": "content_alignment",
				"options": [
					{
						"value": "text-left",
						"label": "Left"
					},
					{
						"value": "text-center",
						"label": "Center"
					},
					{
						"value": "text-right",
						"label": "Right"
					}
				],
				"default": "text-left",
				"label": "Content Alignment"
			},
			{
	      "type": "range",
	      "id": "columns_desktop",
	      "min": 2,
	      "max": 4,
	      "step": 1,
	      "default": 3,
	      "label": "Number of columns on desktop"
	    },
      {
        "type": "range",
        "id": "collection_list_pagination_num",
        "min": 2,
        "max": 30,
        "step": 1,
        "label": "Collections per page",
        "default": 8
      },
			{
        "type": "checkbox",
        "id": "collection_description",
        "label": "Display collection descriptions",
        "default": true
      },
			{
				"type": "range",
				"id": "overlay_opacity",
				"min": 0,
				"max": 100,
				"step": 1,
				"unit": "%",
				"label": "Overlay opacity",
				"default": 30
			},
			{
        "type": "header",
        "content": "Grid"
      },
			{
				"type": "checkbox",
				"id": "mobile_swipe",
				"default": true,
				"label": "Enable swipe on mobile"
			},
			{
        "type": "header",
        "content": "Spacing"
      },
			{
				"type": "checkbox",
				"id": "disable_top_spacing",
				"default": false,
				"label": "Remove top spacing"
			},
			{
				"type": "checkbox",
				"id": "disable_bottom_spacing",
				"default": false,
				"label": "Remove bottom spacing"
			}
    ],
    "blocks": [
      {
        "type": "collection",
        "name": "Collection",
        "settings": [
          {
             "type": "collection",
             "id": "collection",
             "label": "Collection"
          }
        ]
      }
    ]
  }
{% endschema %}
